{"version":3,"file":"static/js/8374.f97d77fb.chunk.js","mappings":"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","sources":["Components/Messages/messages.js","Pages/ForgotPassword/ResetPassword.js","../node_modules/antd/es/locale/useLocale.js","../node_modules/antd/es/style/motion/collapse.js"],"sourcesContent":["import { message } from \"antd\";\n\nexport const SuccessAlert = (messages) => {\n    message.success({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n}\nexport const ErrorAlert = (messages) => {\n    message.error({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n\n}\nexport const WarningAlert = (messages) => {\n    message.warning({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4\n    });\n}","import React, { useState } from 'react'\nimport { Form, Input, Button } from \"antd\";\nimport axios from 'axios';\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport \"./ForgotPassword.css\";\nimport { ErrorAlert, SuccessAlert } from '../../Components/Messages/messages';\n\nconst ResetPassword = () => {\n    const location = useLocation();\n    const router = useNavigate();\n    const token = location.pathname.split(\"password/\")[1];\n    const [form] = Form.useForm();\n    const [submitted, setSubmitted] = useState(false);\n\n    const onFinish = async (values) => {\n        await axios.put(`${process.env.REACT_APP_BACKEND_URL}/users/reset-password`, { token, password: values.password, confirm: values.confirm }).then(res => {\n            if (res.status === 200) {\n                SuccessAlert(res.data.successMessage);\n                router(\"/login\");\n            } else {\n                ErrorAlert(res.data.errorMessage);\n            }\n        }).catch(err => {\n            console.log(err)\n            ErrorAlert(err?.message);\n        })\n    };\n\n    return (\n        <div className='ForgotPassword container'>\n            <div className=\"inner mx-auto\">\n                <h2>Update Password</h2>\n                {\n                    !submitted ?\n                        <>\n                            <Form\n                                layout=\"vertical\"\n                                form={form}\n                                name=\"nest-messages\"\n                                requiredMark={false}\n                                onFinish={onFinish}\n                                style={{\n                                    maxWidth: 600,\n                                }}\n                            >\n                                <Form.Item\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your password!',\n                                        },\n                                    ]}\n                                    hasFeedback\n                                >\n                                    <Input.Password placeholder='Enter password' />\n                                </Form.Item>\n\n                                <Form.Item\n                                    name=\"confirm\"\n                                    label=\"Confirm Password\"\n                                    dependencies={['password']}\n                                    hasFeedback\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please confirm your password!',\n                                        },\n                                        ({ getFieldValue }) => ({\n                                            validator(_, value) {\n                                                if (!value || getFieldValue('password') === value) {\n                                                    return Promise.resolve();\n                                                }\n                                                return Promise.reject(new Error('The new password that you entered do not match!'));\n                                            },\n                                        }),\n                                    ]}\n                                >\n                                    <Input.Password placeholder='Confirm password' />\n                                </Form.Item>\n                                <Form.Item>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        Reset Password\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </>\n                        :\n                        <div>\n                            <Button type=\"primary\" onClick={() => router.push(\"/login\")} htmlType=\"submit\">\n                                Back to log in\n                            </Button>\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default ResetPassword\n","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","const genCollapseMotion = token => ({\n  [token.componentCls]: {\n    // For common/openAnimation\n    [`${token.antCls}-motion-collapse-legacy`]: {\n      overflow: 'hidden',\n      '&-active': {\n        transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n      }\n    },\n    [`${token.antCls}-motion-collapse`]: {\n      overflow: 'hidden',\n      transition: `height ${token.motionDurationMid} ${token.motionEaseInOut},\n        opacity ${token.motionDurationMid} ${token.motionEaseInOut} !important`\n    }\n  }\n});\nexport default genCollapseMotion;"],"names":["SuccessAlert","messages","message","success","className","content","duration","style","marginTop","ErrorAlert","error","ResetPassword","location","useLocation","router","useNavigate","token","pathname","split","form","Form","useForm","submitted","setSubmitted","useState","_jsx","children","_jsxs","Button","type","onClick","push","htmlType","_Fragment","layout","name","requiredMark","onFinish","async","axios","put","concat","process","password","values","confirm","then","res","status","data","successMessage","errorMessage","catch","err","console","log","maxWidth","Item","label","rules","required","hasFeedback","Input","Password","placeholder","dependencies","_ref","getFieldValue","validator","_","value","Promise","reject","Error","resolve","useLocale","componentName","defaultLocale","fullLocale","React","LocaleContext","_a","locale","defaultLocaleData","localeFromContext","Object","assign","localeCode","exist","componentCls","antCls","overflow","transition","motionDurationMid","motionEaseInOut"],"sourceRoot":""}