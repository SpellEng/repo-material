{"version":3,"file":"static/js/3898.cdd9e566.chunk.js","mappings":"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","sources":["Components/Loading/Loading.js","Components/Messages/messages.js","Components/Chat/renderFile.js","Components/Chat/FileUpload/FileUpload.js","Components/Chat/ChatWindow/ChatWindow.js","Components/Chat/Users/UsersList.js","Pages/Chat/Chat.js"],"sourcesContent":["import React from 'react'\r\nimport LoadingIcon from \"../../assets/loading.gif\"\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <img src={LoadingIcon} alt=\"Spinning Tom Nook Loading Icon\" className='loadingSpinner' />\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import { message } from \"antd\";\n\nexport const SuccessAlert = (messages) => {\n    message.success({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n}\nexport const ErrorAlert = (messages) => {\n    message.error({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n\n}\nexport const WarningAlert = (messages) => {\n    message.warning({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4\n    });\n}","import { RiFilePdf2Fill } from \"react-icons/ri\";\nimport { FcDocument } from \"react-icons/fc\";\n\nexport const renderFile = (file, noDownload) => {\n    if (!file?.url) return null;\n\n    if (file?.type?.startsWith('video')) {\n        return <video src={file?.url} controls className=\"messageFile\" />;\n    }\n    else if (file?.format?.startsWith(\"pdf\")) {\n        return <a href={file?.url} download target=\"_blank\" className=\"messageFileLink d-flex align-items-center gap-2\"><RiFilePdf2Fill /> {file?.name}.pdf</a>;\n    }\n    else if (\n        file?.type?.startsWith(\"image\")\n    ) {\n        return <div className=\"messageFile\" >\n            <img src={file?.url} alt=\"Uploaded file\" />\n            <br />\n            {\n                !noDownload &&\n                <a href={file?.url} download target=\"_blank\" className=\"mt-2 d-flex align-items-center justify-content-center gap-2\">Download</a>\n            }\n        </div>\n    }\n    else {\n        return <a href={file?.url} target=\"_blank\" download className=\"messageFileLink d-flex align-items-center gap-2\"><FcDocument /> {file?.name}</a>;\n    }\n};","// src/components/FileUpload.js\nimport React, { useState } from 'react';\nimport { Upload, Button } from 'antd';\nimport './FileUpload.css';\nimport axios from 'axios';\nimport { ErrorAlert } from '../../Messages/messages';\nimport { renderFile } from '../renderFile';\nimport Loading from '../../Loading/Loading';\n\nconst FileUpload = ({ value, updateFileFun }) => {\n    const [loading, setLoading] = useState(false);\n    // const [uploadedFile, setUploadedFile] = useState(null);\n\n    const props = {\n        beforeUpload: file => {\n            console.log(file);\n            const isValidType = file.type.startsWith('image/') || file.type.startsWith('video/') ||\n                file.type === 'application/pdf' ||\n                file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n            if (!isValidType) {\n                ErrorAlert('You can only upload image, video, PDF, or DOCX files!');\n                return Upload.LIST_IGNORE;\n            }\n            else {\n                setLoading(true);\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                axios.post(`${process.env.REACT_APP_BACKEND_URL}/files/upload`, formData, {\n                    headers: {\n                        authorization: 'Bearer ' + localStorage.getItem('token')\n                    }\n                }).then(res => {\n                    setLoading(false);\n                    if (res.status === 200) {\n                        updateFileFun(res.data);\n                    }\n                    else {\n                        ErrorAlert(res.data.errorMessage);\n                    }\n                }).catch(err => {\n                    setLoading(false);\n                    console.log(err)\n                    ErrorAlert(err?.message);\n                })\n            }\n        },\n        maxCount: 1 // Ensure only one file is uploaded\n    };\n\n    return (\n        <div className=\"file-upload\">\n            <Upload {...props} multiple={false} showUploadList={false}>\n                <Button>📎</Button>\n            </Upload>\n            {\n                loading ?\n                    <Loading />\n                    :\n                    renderFile(value, true)\n            }\n        </div>\n    );\n};\n\nexport default FileUpload;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Input, Button, Avatar, List } from 'antd';\nimport { SendOutlined, UserOutlined } from '@ant-design/icons';\nimport './ChatWindow.css';\nimport FileUpload from '../FileUpload/FileUpload';\nimport { renderFile } from '../renderFile';\n\nconst { TextArea } = Input;\n\nconst ChatWindow = ({ receiver, messages, sender, onSendMessage }) => {\n    const [input, setInput] = useState('');\n    const [uploadedFile, setUploadedFile] = useState(null);\n    const messagesEndRef = useRef(null);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    const scrollToBottom = () => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    };\n\n    const sendMessage = () => {\n        if (input === '') return;\n        onSendMessage(input, uploadedFile);\n        setInput(\"\");\n        setUploadedFile(null);\n    };\n\n    return (\n        <div className=\"chat-window\">\n            <div className=\"chat-header\">\n                <div className=\"d-flex gap-2 align-items-center\">\n                    <Avatar src={receiver?.picture?.url} icon={!receiver?.picture?.url && <UserOutlined />} />\n                    <span>{receiver?.fullName}</span>\n                </div>\n            </div>\n            <div className=\"messages\">\n                {messages?.length > 0 &&\n                    <List\n                        itemLayout=\"horizontal\"\n                        dataSource={messages}\n                        renderItem={message => (\n                            <List.Item ref={messagesEndRef} className={`message ${message?.sender === sender?._id ? 'my-message' : ''}`}>\n                                <List.Item.Meta\n                                    avatar={<Avatar icon={<UserOutlined />} />}\n                                    title={message?.sender === sender?._id ? 'Me' : receiver?.fullName}\n                                    description={\n                                        <div>\n                                            {renderFile(message?.file)}\n                                            <p>{message?.message}</p>\n                                        </div>\n                                    }\n                                />\n                            </List.Item>\n                        )}\n                    />\n                }\n            </div>\n            <div className=\"chat-input\">\n                <TextArea\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type your message here\"\n                    autoSize={{ minRows: 2, maxRows: 6 }}\n                />\n                <Button type=\"primary\" icon={<SendOutlined />} onClick={sendMessage}>\n                    Send\n                </Button>\n            </div>\n            <FileUpload value={uploadedFile} updateFileFun={(val) => setUploadedFile(val)} />\n        </div>\n    );\n};\n\nexport default ChatWindow;\n","import React, { useState } from 'react';\nimport { List, Avatar, Input } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport './UsersList.css';\nimport { isAuthenticated } from '../../Auth/auth';\n\nconst { Search } = Input;\n\nconst UserList = ({ users, onSelectUser, selectedUser }) => {\n    const [searchText, setSearchText] = useState(\"\");\n\n    const handleSearch = (e) => {\n        setSearchText(e.target.value);\n    };\n\n    const filteredUsers = users?.filter(user => {\n        let userToShow = isAuthenticated()?._id === user?.receiver?._id ? user?.sender : user?.receiver;\n        return userToShow?.fullName?.toUpperCase()?.includes(searchText?.toUpperCase());\n    });\n\n    return (\n        <div className=\"user-list\">\n            <div className=\"header\">\n                <h3>All Conversations</h3>\n                <Search size='large' allowClear placeholder=\"Search\" className='w-100' onChange={handleSearch} />\n            </div>\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={filteredUsers}\n                renderItem={user => {\n                    let userToShow = isAuthenticated()?._id === user?.receiver?._id ? user?.sender : user?.receiver;\n                    return (\n                        <List.Item className={selectedUser === userToShow?._id ? \"active\" : \"\"} onClick={() => onSelectUser(userToShow?._id)}>\n                            <List.Item.Meta\n                                avatar={<Avatar src={userToShow?.picture?.url} icon={!userToShow?.picture?.url && <UserOutlined />} />}\n                                title={userToShow?.fullName}\n                                description={user?.messages[user?.messages?.length - 1]?.message}\n                            />\n                        </List.Item>\n                    )\n                }}\n            />\n        </div>\n    );\n};\n\nexport default UserList;\n","import { Button } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport ChatWindow from '../../Components/Chat/ChatWindow/ChatWindow';\nimport UserList from '../../Components/Chat/Users/UsersList';\nimport './Chat.css';\nimport { useSocketContext } from '../../Context/SocketContext';\nimport { useLocation } from 'react-router-dom';\nimport { isAuthenticated } from '../../Components/Auth/auth';\nimport { ErrorAlert } from '../../Components/Messages/messages';\nimport axios from 'axios';\nimport { AiOutlineMenuUnfold } from \"react-icons/ai\";\nimport { RiCloseLargeLine } from \"react-icons/ri\";\n\nconst Chat = () => {\n    const socket = useSocketContext();\n    const location = useLocation();\n    const receiverId = location.search.split(\"receiver=\")[1];\n    const sender = isAuthenticated();\n    const [users, setUsers] = useState([]);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [showUserList, setShowUserList] = useState(false);\n    const [receiver, setReceiver] = useState(null);\n    const [messages, setMessages] = useState([]);\n\n    const getUserById = async (id) => {\n        await axios.get(`${process.env.REACT_APP_BACKEND_URL}/users/user/${id}`).then(res => {\n            if (res.status === 200) {\n                setReceiver(res.data);\n            } else {\n                ErrorAlert(res.data.errorMessage);\n            }\n        }).catch(err => {\n            console.log(err)\n            ErrorAlert(err?.message);\n        })\n    }\n\n    useEffect(() => {\n        if (socket) {\n            socket.emit(\"join\", ({ userId: sender?._id }));\n            // Emit getUsers event to server to fetch users list\n            socket.emit('users', sender?._id);\n\n            if (receiverId) {\n                socket.emit('messages', { receiver: receiverId, sender: sender?._id });\n            }\n\n            // Handle usersList event from server\n            socket.on('users', (users) => {\n                setUsers(users);\n            });\n\n            socket.on('only sent to receiver', (user) => {\n                console.log(\"only sent to receiver\", user)\n            });\n\n            socket.on('messages', (messagesListFromBackend) => {\n                console.log(\"all messages got\", messagesListFromBackend);\n                setMessages(messagesListFromBackend);\n                if (messagesListFromBackend?.length === 1) {\n                    socket.emit('users', sender?._id);\n                }\n            });\n        }\n\n\n        return () => {\n            if (socket) {\n                socket.off('usersList');\n            }\n        };\n    }, [socket, selectedUser]);\n\n    useEffect(() => {\n        if (receiverId) {\n            setSelectedUser(receiverId);\n            getUserById(receiverId);\n        }\n\n\n        return () => {\n\n        }\n    }, [receiverId]);\n\n\n    const handleSelectUser = (user) => {\n        setSelectedUser(user);\n        setShowUserList(false);\n        getUserById(user);\n        // Emit join event to socket server\n        socket.emit('join', { userId: sender?._id });\n\n        socket.emit('messages', { receiver: user, sender: sender?._id });\n    };\n\n    const sendMessage = async (message, file) => {\n        const senderId = sender?._id;\n\n        // Emit sendMessage event to socket server\n        await socket.emit('sendMessage', { senderId, receiverId: selectedUser, message, file });\n\n        // Update local state for immediate display\n        if (messages?.length > 0) {\n            setMessages(prevMessages => [...prevMessages, { sender: senderId, receiver: selectedUser, message, file }]);\n        } else {\n            socket.emit('users', sender?._id);\n            setMessages([{ sender: senderId, receiver: selectedUser, message, file }]);\n        }\n    };\n\n    return (\n        <div className={`chat-container container ${showUserList ? 'show-user-list' : ''}`}>\n            <div className='d-flex'>\n                <UserList users={users} selectedUser={selectedUser} onSelectUser={handleSelectUser} />\n                <Button\n                    type=\"primary\"\n                    className={`mobileUsersBtn ${showUserList && \"open\"}`}\n                    onClick={() => setShowUserList(!showUserList)}\n                >\n                    {showUserList ? <RiCloseLargeLine /> : <AiOutlineMenuUnfold />}\n                </Button>\n            </div>\n            <div className=\"chat-main mt-5 mt-md-0\">\n                {receiver ? (\n                    <ChatWindow\n                        sender={sender}\n                        receiver={receiver}\n                        messages={messages}\n                        onSendMessage={sendMessage}\n                    />\n                ) : (\n                    <div className=\"select-chat\">Please select a chat</div>\n                )}\n                <div className='d-block d-md-none'>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"names":["Loading","_jsx","src","LoadingIcon","alt","className","SuccessAlert","messages","message","success","content","duration","style","marginTop","ErrorAlert","error","renderFile","file","noDownload","_file$type","_file$format","_file$type2","url","type","startsWith","controls","format","_jsxs","href","download","target","children","RiFilePdf2Fill","name","FcDocument","_ref","value","updateFileFun","loading","setLoading","useState","props","beforeUpload","console","log","Upload","LIST_IGNORE","formData","FormData","append","axios","post","concat","process","headers","authorization","localStorage","getItem","then","res","status","data","errorMessage","catch","err","maxCount","multiple","showUploadList","Button","TextArea","Input","_receiver$picture","_receiver$picture2","receiver","sender","onSendMessage","input","setInput","uploadedFile","setUploadedFile","messagesEndRef","useRef","useEffect","scrollToBottom","current","scrollIntoView","behavior","Avatar","picture","icon","UserOutlined","fullName","length","List","itemLayout","dataSource","renderItem","Item","ref","_id","Meta","avatar","title","description","onChange","e","placeholder","autoSize","minRows","maxRows","SendOutlined","onClick","sendMessage","FileUpload","val","Search","users","onSelectUser","selectedUser","searchText","setSearchText","filteredUsers","filter","user","_isAuthenticated","_user$receiver","_userToShow$fullName","_userToShow$fullName$","userToShow","isAuthenticated","toUpperCase","includes","size","allowClear","_isAuthenticated2","_user$receiver2","_userToShow$picture","_userToShow$picture2","_user$messages","_user$messages2","Chat","socket","useSocketContext","receiverId","useLocation","search","split","setUsers","setSelectedUser","showUserList","setShowUserList","setReceiver","setMessages","getUserById","async","get","id","emit","userId","on","messagesListFromBackend","off","UserList","RiCloseLargeLine","AiOutlineMenuUnfold","ChatWindow","senderId","prevMessages"],"sourceRoot":""}