{"version":3,"file":"static/js/484.64183c74.chunk.js","mappings":"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","sources":["Components/CurrencySign.js","Components/Messages/messages.js","Components/CurrencyFormatter.js","Components/Subscription/PricingCard.js","Components/Payment/RazorPayComp.js","Components/Subscription/BillSummary.js","Pages/Subscription/Subscription.js"],"sourcesContent":["import React from 'react'\n\nconst CurrencySign = () => {\n    return (\n        <>\n            â‚¹\n        </>\n    )\n}\n\nexport default CurrencySign\n","import { message } from \"antd\";\n\nexport const SuccessAlert = (messages) => {\n    message.success({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n}\nexport const ErrorAlert = (messages) => {\n    message.error({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n\n}\nexport const WarningAlert = (messages) => {\n    message.warning({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4\n    });\n}","export const formatCurrency = (amount, locale = 'en-IN', currency = 'INR') => {\n    return new Intl.NumberFormat(locale, {\n        // style: 'currency',\n        currency: currency,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    }).format(amount);\n}","import React from 'react';\nimport { formatCurrency } from '../CurrencyFormatter';\nimport CurrencySign from '../CurrencySign';\n\nconst PricingPlanCard = ({ plan, selectedClasses, selectedPlan, setSelectedPlan }) => {\n    const currentPrice = plan.classes.find(c => c.count === selectedClasses).price;\n\n    return (\n        <div className={`planContainer ${selectedPlan === plan.duration && \"selected\"}`} onClick={() => setSelectedPlan(plan.duration)}>\n            {plan.discount && (\n                <div className='save'>\n                    <p>SAVE {plan.discount}%</p>\n                </div>\n            )}\n            <div>\n                <h6>{plan.duration}</h6>\n                <p>No. of classes: <b>{selectedClasses * parseInt(plan.duration)}</b></p>\n            </div>\n            <div>\n                <h4><CurrencySign />{formatCurrency(currentPrice / parseInt(plan.duration))} <small>/mo</small></h4>\n            </div>\n        </div>\n    );\n};\n\nexport default PricingPlanCard;\n","import React from 'react';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { ErrorAlert, SuccessAlert } from '../Messages/messages';\nimport { isAuthenticated } from '../Auth/auth';\nimport { Button } from 'antd';\n\nconst RazorPayComp = ({ studentId, plan, amount, classesPerMonth, btnText }) => {\n    const router = useNavigate();\n    // let updatedRazorPayAmount = plan === \"3 Month Plan\" ? amount * 3 * 100 : amount * 100;\n    // let updatedDbAmount = plan === \"3 Month Plan\" ? amount * 3 : amount;\n\n    const handlePayment = async () => {\n        if (isAuthenticated()) {\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/subscriptions/create-order`, { amount }, {\n                headers: {\n                    Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n                }\n            }).catch(err => {\n                console.log(err);\n            })\n            const { id: order_id } = res.data;\n\n            const options = {\n                key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n                amount,\n                currency: 'INR',\n                name: 'SpellENg Subscription',\n                description: 'Subscription Payment',\n                order_id: order_id,\n                handler: async function (response) {\n                    try {\n                        await axios.post(`${process.env.REACT_APP_BACKEND_URL}/subscriptions/create-subscription`, {\n                            studentId,\n                            plan,\n                            name: isAuthenticated()?.fullName,\n                            email: isAuthenticated()?.email,\n                            classesPerMonth,\n                            razorpayPaymentId: response.razorpay_payment_id,\n                            amount,\n                        }, {\n                            headers: {\n                                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n                            }\n                        });\n                        SuccessAlert('Subscription created and activated successfully');\n                        router(\"/student/subscriptions\")\n                    } catch (error) {\n                        console.error(error);\n                        ErrorAlert('Failed to create subscription');\n                    }\n                },\n                theme: {\n                    color: '#F37254'\n                }\n            };\n\n            const rzp = new window.Razorpay(options);\n            rzp.open();\n        } else {\n            ErrorAlert(\"Please login first to buy plans\")\n        }\n    };\n\n    return (\n        <Button className='btn h-auto w-100 py-2 rounded-2 payBtn' onClick={handlePayment}>\n            {btnText}\n        </Button>\n    );\n};\n\nexport default RazorPayComp;\n","import { Button, Input } from 'antd';\nimport React, { useState } from 'react';\nimport { formatCurrency } from '../CurrencyFormatter';\nimport CurrencySign from '../CurrencySign';\nimport razorpay from \"../../assets/razorpay.png\"\nimport RazorPayComp from '../Payment/RazorPayComp';\nimport { isAuthenticated } from '../Auth/auth';\nimport axios from 'axios';\nimport { ErrorAlert, SuccessAlert } from '../Messages/messages';\n\nconst { Search } = Input;\n\nconst BillSummary = ({ selectedPlan, selectedClasses, pricingPlans }) => {\n    const plan = pricingPlans.find(p => p.duration === selectedPlan);\n    const [couponCode, setCouponCode] = useState(\"\");\n    const [discountFromCoupon, setDiscountFromCoupon] = useState(0);\n\n    if (!plan) return null;\n\n    const currentPrice = plan.classes.find(c => c.count === selectedClasses).price;\n    const discount = plan.discount ? (currentPrice * plan.discount) / 100 : 0;\n    const couponDiscountPrice = discountFromCoupon ? (currentPrice * discountFromCoupon) / 100 : 0;\n    const netPrice = currentPrice - discount;\n\n    const handleCouponValidation = async () => {\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/coupons/validate`, { code: couponCode }, {\n                headers: {\n                    Authorization: 'Bearer ' + localStorage.getItem(\"token\")\n                }\n            });\n            if (res.status === 200) {\n                setDiscountFromCoupon(res.data.discount);\n                SuccessAlert(`Coupon applied! Discount: ${res.data.discount}%`);\n            }\n        } catch (error) {\n            ErrorAlert(error.response.data.message);\n        }\n    };\n\n    return (\n        <div className='billContainer'>\n            <h4>Bill Summary</h4>\n            <div className='item'>\n                <h6>Base Price:</h6>\n                <h6><CurrencySign />{formatCurrency(currentPrice)}</h6>\n            </div>\n            {discount > 0 && (\n                <div className='item discount'>\n                    <h6>Discount ({plan.discount}%):</h6>\n                    <h6>-<CurrencySign />{formatCurrency(discount)}</h6>\n                </div>\n            )}\n            {couponDiscountPrice > 0 && (\n                <div className='item discount'>\n                    <h6>Coupon Discount ({discountFromCoupon}%):</h6>\n                    <h6>-<CurrencySign />{formatCurrency(couponDiscountPrice)}</h6>\n                </div>\n            )}\n            <div className='item'>\n                <h6>Net Price:</h6>\n                <h6><CurrencySign />{formatCurrency(netPrice - couponDiscountPrice)}</h6>\n            </div>\n            <div className='item couponContainer'>\n                <h6>Have a discount coupon?</h6>\n                <div>\n                    <Search\n                        placeholder=\"Enter coupon code\"\n                        value={couponCode}\n                        allowClear\n                        onChange={(e) => setCouponCode(e.target.value)}\n                        onSearch={handleCouponValidation}\n                        enterButton=\"Apply\"\n                    />\n                    {/* <Button onClick={handleCouponValidation}>Apply</Button> */}\n                </div>\n            </div>\n            <div className='item mt-5'>\n                <h6><b>Pay Now</b></h6>\n                <h6><b><CurrencySign />{formatCurrency(netPrice - couponDiscountPrice)}</b></h6>\n            </div>\n            <div className='item mt-0 mb-4'>\n                <button className='btn'>\n                    <img src={razorpay} alt=\"Razorpay\" style={{ width: \"100px\" }} />\n                </button>\n            </div>\n            <RazorPayComp btnText={<div>Pay &nbsp; <CurrencySign />{formatCurrency(netPrice - couponDiscountPrice)}</div>} classesPerMonth={selectedClasses} studentId={isAuthenticated()?._id} plan={selectedPlan} amount={netPrice - couponDiscountPrice} />\n            {/* <Button className='btn h-auto w-100 py-2 rounded-2 payBtn'>Pay &nbsp; <CurrencySign />{formatCurrency(netPrice)}</Button> */}\n        </div>\n    );\n};\n\nexport default BillSummary;\n","import React, { useState } from 'react';\r\nimport { Select } from 'antd';\r\nimport { GiCheckMark } from \"react-icons/gi\";\r\nimport \"./Subscription.css\";\r\nimport PricingPlanCard from '../../Components/Subscription/PricingCard';\r\nimport BillSummary from '../../Components/Subscription/BillSummary';\r\n\r\nconst Subscription = () => {\r\n  const [selectedClasses, setSelectedClasses] = useState(12);\r\n  const [selectedPlan, setSelectedPlan] = useState(\"3 Month\");\r\n\r\n  const pricingPlans = [\r\n    {\r\n      duration: \"1 Month\",\r\n      classes: [\r\n        { count: 12, price: 6700 },\r\n        { count: 20, price: 8500 }\r\n      ]\r\n    },\r\n    {\r\n      duration: \"3 Month\",\r\n      classes: [\r\n        { count: 12, price: 16000 },\r\n        { count: 20, price: 20000 }\r\n      ],\r\n      discount: 19\r\n    },\r\n    {\r\n      duration: \"6 Month\",\r\n      classes: [\r\n        { count: 12, price: 30000 },\r\n        { count: 20, price: 35000 }\r\n      ],\r\n      discount: 24\r\n    }\r\n  ];\r\n\r\n  console.log(selectedPlan);\r\n\r\n  return (\r\n    <div className=\"Subscription\">\r\n      <div className=\"inner container\">\r\n        <div>\r\n          <h3 className='text-center'>Choose a plan that suits your need</h3>\r\n          <div className=\"features\">\r\n            <ul>\r\n              {\r\n                [\r\n                  \"1-1 Live Class\",\r\n                  `${selectedClasses} Classes Per Month`,\r\n                  \"30 Minutes Per Class\",\r\n                  \"Class Recording\",\r\n                  \"Expert Feedback\",\r\n                  \"Flexible Timing\",\r\n                ]?.map((feature, index) => {\r\n                  return (\r\n                    <li key={index}>\r\n                      <GiCheckMark /> {feature}\r\n                    </li>\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"subscriptionContainer\">\r\n          <div className=\"subscriptionPlanContainer\">\r\n            <div className=\"classesBtns\">\r\n              <h6>Select No. of classes</h6>\r\n              <Select\r\n                defaultValue={12}\r\n                className='classesSelect'\r\n                onChange={(val) => setSelectedClasses(val)}\r\n                options={[\r\n                  {\r\n                    value: 12,\r\n                    label: \"12 Classes per month\",\r\n                  },\r\n                  {\r\n                    value: 20,\r\n                    label: \"20 Classes per month\",\r\n                  }\r\n                ]}\r\n              />\r\n            </div>\r\n            {pricingPlans.reverse().map(plan => (\r\n              <PricingPlanCard\r\n                key={plan.duration}\r\n                plan={plan}\r\n                selectedClasses={selectedClasses}\r\n                selectedPlan={selectedPlan}\r\n                setSelectedPlan={setSelectedPlan}\r\n              />\r\n            ))}\r\n            {/* </div> */}\r\n          </div>\r\n          <BillSummary\r\n            selectedPlan={selectedPlan}\r\n            selectedClasses={selectedClasses}\r\n            pricingPlans={pricingPlans}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Subscription;"],"names":["CurrencySign","_jsx","_Fragment","children","SuccessAlert","messages","message","success","className","content","duration","style","marginTop","ErrorAlert","error","formatCurrency","amount","locale","arguments","length","undefined","currency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","_ref","plan","selectedClasses","selectedPlan","setSelectedPlan","currentPrice","classes","find","c","count","price","_jsxs","concat","onClick","discount","parseInt","studentId","classesPerMonth","btnText","router","useNavigate","Button","async","isAuthenticated","res","axios","post","process","headers","Authorization","localStorage","getItem","catch","err","console","log","id","order_id","data","options","key","name","description","handler","response","_isAuthenticated","_isAuthenticated2","fullName","email","razorpayPaymentId","razorpay_payment_id","theme","color","window","Razorpay","open","Search","Input","pricingPlans","p","couponCode","setCouponCode","useState","discountFromCoupon","setDiscountFromCoupon","couponDiscountPrice","netPrice","placeholder","value","allowClear","onChange","e","target","onSearch","code","status","enterButton","src","razorpay","alt","width","RazorPayComp","_id","Subscription","setSelectedClasses","map","feature","index","GiCheckMark","Select","defaultValue","val","label","reverse","PricingPlanCard","BillSummary"],"sourceRoot":""}