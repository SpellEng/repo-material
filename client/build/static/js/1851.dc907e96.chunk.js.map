{"version":3,"file":"static/js/1851.dc907e96.chunk.js","mappings":"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","sources":["Components/CountdownTimer.js","Components/Messages/messages.js","Components/UserTimeZone.js","Pages/Registration/Registration.js"],"sourcesContent":["import { Button } from 'antd';\nimport React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n\nexport const CountdownTimer = ({ sendOtp }) => {\n    const [expired, setExpired] = useState(false);\n    let expiryTimestamp = new Date().setSeconds(new Date().getSeconds() + 120);\n    const {\n        seconds,\n        minutes,\n        restart\n    } = useTimer({ autoStart: true, expiryTimestamp, onExpire: () => setExpired(true) });\n\n    const handleSendOTP = async () => {\n        setExpired(false);\n        await sendOtp();\n        restart(expiryTimestamp);\n    }\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            {\n                expired ?\n                    <Button style={{ width: \"130px\" }} type='primary' onClick={handleSendOTP}>Resend OTP</Button>\n                    :\n                    <span>{minutes}:{seconds}</span>\n            }\n        </div>\n    );\n}","import { message } from \"antd\";\n\nexport const SuccessAlert = (messages) => {\n    message.success({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n}\nexport const ErrorAlert = (messages) => {\n    message.error({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n\n}\nexport const WarningAlert = (messages) => {\n    message.warning({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4\n    });\n}","export const getUserTimezone = () => {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone\n};","import React, { useState } from \"react\";\r\nimport \"./Registration.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport logopic from \"../../assets/favicon.ico\";\r\nimport { Alert, Button, Checkbox, Col, Divider, Input, Rate, Row } from \"antd\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { InputMask } from '@react-input/mask';\r\nimport loginpic from \"../../assets/Book A Trial.webp\";\r\nimport axios from \"axios\";\r\nimport { ErrorAlert, SuccessAlert } from \"../../Components/Messages/messages\";\r\nimport { isAuthenticated, setAuthentication } from \"../../Components/Auth/auth\";\r\nimport { CountdownTimer } from \"../../Components/CountdownTimer\";\r\nimport { getUserTimezone } from \"../../Components/UserTimeZone\";\r\n\r\nconst Registration = () => {\r\n  const router = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    password: '',\r\n    city: '',\r\n    phoneNumber: '',\r\n    termsAccepted: false,\r\n    orderId: \"\"\r\n  });\r\n\r\n  const { fullName, city, phoneNumber, email, password } = formData;\r\n\r\n  const handleChange = (key, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [key]: value\r\n    });\r\n  };\r\n\r\n  const handleTrialPayment = async () => {\r\n    if (isAuthenticated() && isAuthenticated()?.trialActivated) {\r\n      ErrorAlert(\"Trial can be activated once. You have already activated your free trial.\")\r\n    }\r\n    else if (isAuthenticated() && !isAuthenticated()?.trialActivated) {\r\n      setLoading(true);\r\n      const res = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/subscriptions/create-order`, { amount: 99 }, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\r\n        }\r\n      }).catch(err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n      const { id: order_id } = res.data;\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: 99 * 100,\r\n        currency: 'INR',\r\n        name: 'SpellEng Trial Payment',\r\n        description: 'Trial Payment',\r\n        order_id: order_id,\r\n        handler: async function (response) {\r\n          try {\r\n            await axios.post(`${process.env.REACT_APP_BACKEND_URL}/users/book-trial`, {\r\n              user: isAuthenticated()?._id,\r\n              plan: \"Trial\",\r\n              name: isAuthenticated()?.fullName,\r\n              email: isAuthenticated()?.email,\r\n              razorpayPaymentId: response.razorpay_payment_id,\r\n              amount: 99,\r\n            }, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\")\r\n              }\r\n            }).then(res => {\r\n              setLoading(false);\r\n              if (res.status === 200) {\r\n                SuccessAlert(res.data.successMessage);\r\n                localStorage.setItem(\"user\", JSON.stringify(res.data?.user));\r\n                router(\"/all-tutors\")\r\n              } else {\r\n                ErrorAlert(res.data.errorMessage);\r\n              }\r\n            })\r\n          } catch (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n            ErrorAlert('Failed to activate Trial');\r\n          }\r\n        },\r\n        theme: {\r\n          color: '#F37254'\r\n        }\r\n      };\r\n\r\n      const rzp = new window.Razorpay(options);\r\n      rzp.open();\r\n    } else {\r\n      ErrorAlert(\"Please login first to activate your trial\")\r\n    }\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (fullName, city, phoneNumber, email, password) {\r\n      setLoading(true);\r\n      if (otp) {\r\n        formData.otp = otp;\r\n        formData.timezone = getUserTimezone();\r\n        await axios.post(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, formData).then(res => {\r\n          setLoading(false);\r\n          if (res.status === 200) {\r\n            setAuthentication(res.data?.user, res.data?.token);\r\n            SuccessAlert(res.data.successMessage);\r\n            handleTrialPayment();\r\n          } else {\r\n            ErrorAlert(res.data.errorMessage);\r\n          }\r\n        }).catch(err => {\r\n          setLoading(false);\r\n          console.log(err)\r\n          ErrorAlert(err?.response?.data?.errorMessage || err?.message);\r\n        })\r\n      } else {\r\n        ErrorAlert(\"Please verify your OTP first to continue\")\r\n      }\r\n    } else {\r\n      setValidationError(\"All fields are required\");\r\n    }\r\n  };\r\n\r\n  const sendOtp = async () => {\r\n    if (phoneNumber) {\r\n      setLoading(true);\r\n      await axios.post(`${process.env.REACT_APP_BACKEND_URL}/users/send-otp`, { phoneNumber }).then(res => {\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n          setOtpSent(true);\r\n          handleChange('orderId', res.data.orderId);\r\n          SuccessAlert(res.data.successMessage);\r\n        } else {\r\n          ErrorAlert(res.data.errorMessage);\r\n        }\r\n      }).catch(err => {\r\n        setLoading(false);\r\n        console.log(err)\r\n        ErrorAlert(err?.response?.data?.errorMessage || err?.message);\r\n      })\r\n    } else {\r\n      setValidationError(\"Please enter your phone number.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registration\">\r\n      <div className=\"container\">\r\n        <Row gutter={[19, 19]}>\r\n          <Col xs={24} md={13} className=\"leftRegistration mt-3\">\r\n            <div>\r\n              <img src={loginpic} alt=\"\" />\r\n              <div className=\"bgOpacity\" />\r\n              <div className=\"caption\">\r\n                <h3>\r\n                  \"Learning English is crucial for career\r\n                  advancement and higher income potential. It opens global job\r\n                  opportunities, improves communication skills, and increases access\r\n                  to valuable educational resources.\"\r\n                </h3>\r\n                <div className=\"nameAndReviews\">\r\n                  <div>\r\n                    <h2>Parvej Khan</h2>\r\n                    <span>Founder, SpellEng</span>\r\n                  </div>\r\n                  <Rate value={4.5} allowHalf disabled />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} md={11} className=\"rightRegistration\">\r\n            <div className=\"d-flex align-items-center justify-content-center gap-3 mb-2\">\r\n              <Link to=\"/\">\r\n                <img className=\"logo\" src={logopic} alt=\"\" />\r\n              </Link>\r\n              <h2>Let's Go: Book a Trial!</h2>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <p>\r\n                Take the first step with an affordable trial session for just @ ₹99\r\n              </p>\r\n            </div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n              {\r\n                validationError &&\r\n                <Alert type=\"error\">{validationError}</Alert>\r\n              }\r\n              <Row gutter={[19, 19]}>\r\n                <Col xs={24} md={12} className=\"leftinput\">\r\n                  <div className=\"item\">\r\n                    <label htmlFor=\"name\" className=\"form-label\">\r\n                      Full Name\r\n                    </label>\r\n                    <Input\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Enter your name\"\r\n                      value={formData.fullName}\r\n                      onChange={(e) => handleChange('fullName', e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                  <div className=\"item\">\r\n                    <label htmlFor=\"inputEmail\" className=\"form-label\">\r\n                      Email\r\n                    </label>\r\n                    <Input\r\n                      required\r\n                      type=\"email\"\r\n                      placeholder=\"Enter your email\"\r\n                      value={formData.email}\r\n                      onChange={(e) => handleChange('email', e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={24} md={12}>\r\n                  <div className=\"item\">\r\n                    <label htmlFor=\"inputPassword\" className=\"form-label\">\r\n                      Password\r\n                    </label>\r\n                    <Input.Password\r\n                      required\r\n                      type=\"password\"\r\n                      placeholder=\"Enter your password\"\r\n                      value={formData.password}\r\n                      onChange={(e) => handleChange('password', e.target.value)}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col xs={24} md={12} className=\"rightinput\">\r\n                  <div className=\"item\">\r\n                    <label htmlFor=\"phoneNumber\" className=\"form-label\">\r\n                      Phone number\r\n                    </label>\r\n                    <div className=\"PhoneBtnContainer\">\r\n                      <InputMask\r\n                        placeholder=\"Enter phone number\"\r\n                        mask=\"+91__________\"\r\n                        replacement={{ _: /\\d/ }}\r\n                        onChange={(e) => handleChange('phoneNumber', e.target.value)}\r\n                      />\r\n                      <button onClick={sendOtp} type=\"button\" className=\"codebtn btn\">Send code</button>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                {\r\n                  otpSent &&\r\n                  <Col xs={24}>\r\n                    <div className=\"otpPart\">\r\n                      <div>\r\n                        <h3 className=\"mb-2\">OTP</h3>\r\n                        <OtpInput\r\n                          value={otp}\r\n                          onChange={setOtp}\r\n                          numInputs={6}\r\n                          renderSeparator={<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>}\r\n                          renderInput={(props) => <input {...props} />}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <CountdownTimer sendOtp={sendOtp} />\r\n                  </Col>\r\n                }\r\n                <Col xs={24}>\r\n                  <Checkbox\r\n                    required\r\n                    checked={formData.termsAccepted}\r\n                    onChange={(e) => handleChange('termsAccepted', e.target.checked)}\r\n                  >\r\n                    Accept terms of condition and privacy policy\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col xs={24} className=\"otpBtn\">\r\n                  <Button disabled={loading} className=\"py-2 h-auto\" loading={loading} type=\"primary\" htmlType=\"submit\">Book A Trial</Button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n            <Divider>Or</Divider>\r\n            <div className=\"loginOption\">\r\n              <p>\r\n                Already have an account? <Link to=\"/login\">Login</Link>\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"names":["CountdownTimer","_ref","sendOtp","expired","setExpired","useState","expiryTimestamp","Date","setSeconds","getSeconds","seconds","minutes","restart","useTimer","autoStart","onExpire","_jsx","style","textAlign","children","Button","width","type","onClick","async","_jsxs","SuccessAlert","messages","message","success","className","content","duration","marginTop","ErrorAlert","error","getUserTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","Registration","router","useNavigate","loading","setLoading","otp","setOtp","validationError","setValidationError","otpSent","setOtpSent","formData","setFormData","fullName","email","password","city","phoneNumber","termsAccepted","orderId","handleChange","key","value","axios","post","concat","process","then","res","status","data","successMessage","errorMessage","catch","err","_err$response2","_err$response2$data","console","log","response","Row","gutter","Col","xs","md","src","loginpic","alt","Rate","allowHalf","disabled","Link","to","logopic","onSubmit","e","preventDefault","timezone","_res$data2","_res$data3","setAuthentication","user","token","_isAuthenticated","_isAuthenticated2","isAuthenticated","trialActivated","amount","headers","Authorization","localStorage","getItem","id","order_id","options","currency","name","description","handler","_isAuthenticated3","_isAuthenticated4","_isAuthenticated5","_id","plan","razorpayPaymentId","razorpay_payment_id","_res$data","setItem","JSON","stringify","theme","color","window","Razorpay","open","handleTrialPayment","_err$response","_err$response$data","Alert","htmlFor","Input","required","placeholder","onChange","target","Password","InputMask","mask","replacement","_","OtpInput","numInputs","renderSeparator","renderInput","props","Checkbox","checked","htmlType","Divider"],"sourceRoot":""}