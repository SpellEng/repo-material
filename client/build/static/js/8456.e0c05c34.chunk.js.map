{"version":3,"file":"static/js/8456.e0c05c34.chunk.js","mappings":"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","sources":["Components/DragUpload/DragUpload.js","Components/Loading/Loading.js","Components/Messages/messages.js","Components/UserTimeZone.js","Pages/Students/StudentProfile/StudentProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./Dragger.css\";\nimport { message, Upload } from 'antd';\nimport { DeleteFilled, UploadOutlined } from '@ant-design/icons';\nimport Loading from '../Loading/Loading';\nconst { Dragger } = Upload;\n\nconst DragUpload = ({ updateFiles, value, noMultiple, accept }) => {\n    const [fileList, setFileList] = useState([]);\n    const [uploading, setUploading] = useState(false);\n\n    const props = {\n        name: 'file',\n        multiple: true,\n        action: `${process.env.REACT_APP_BACKEND_URL}/files/upload`,\n        onChange(info) {\n            setUploading(true);\n            const { status } = info.file;\n            const updatedFileList = info.fileList?.map(f => f?.response);\n            if (status !== 'uploading') {\n                setUploading(false)\n            }\n            if (status === 'done') {\n                if (noMultiple) {\n                    updateFiles([updatedFileList[0]]);\n                    setFileList([updatedFileList[0]]);\n                } else {\n                    if (fileList?.length > 0) {\n                        updateFiles([...fileList, updatedFileList[updatedFileList?.length - 1]]);\n                        setFileList([...fileList, updatedFileList[updatedFileList?.length - 1]])\n                    } else {\n                        updateFiles(updatedFileList)\n                        setFileList(updatedFileList)\n                    }\n                }\n                message.success(`${info.file.name} file uploaded successfully.`);\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n        onDrop(e) {\n            console.log('Dropped files', e.dataTransfer.files);\n        },\n    };\n\n    useEffect(() => {\n        if (value?.length > 0) {\n            setFileList(value)\n        }\n    }, [value]);\n\n    const handleDelete = (index) => {\n        const updatedFiles = fileList.filter((file, i) => i !== index);\n        setFileList(updatedFiles);\n        updateFiles(updatedFiles);\n    };\n\n    return (\n        <div>\n            <Dragger accept={accept} maxCount={noMultiple ? 1 : 10} {...props} className=\"dragger\" defaultFileList={value} showUploadList={false} previewFile={false}>\n                <div className='flex justify-center gap-3'>\n                    <UploadOutlined />\n                    <div className=\"text-[14px] font-[600] flex items-center justify-center w-auto gap-1\">\n                        <div className='text-[#1796E3]'>Click to upload pictures</div>\n                        <div>or drag and drop</div>\n                    </div>\n                </div>\n            </Dragger>\n            <div className=\"d-flex gap-4 flex-wrap align-items-center mt-4 imagesList\">\n                {fileList?.length > 0 && fileList?.map((file, index) => (\n                    file?.url &&\n                    <div key={index}>\n                        <div className='text-end' >\n                            <DeleteFilled onClick={() => handleDelete(index)} />\n                        </div>\n                        <img src={file?.url || file?.url} alt={file?.name} className=\"image\" width={64} height={64} />\n                    </div>\n                ))}\n                {uploading &&\n                    <div className='flex justify-center items-center h-[64px] w-[64px] border'>\n                        <Loading />\n                    </div>\n                }\n            </div>\n        </div >\n    );\n}\nexport default DragUpload;\n","import React from 'react'\r\nimport LoadingIcon from \"../../assets/loading.gif\"\r\nimport \"./Loading.css\"\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <img src={LoadingIcon} alt=\"Spinning Tom Nook Loading Icon\" className='loadingSpinner' />\r\n    )\r\n}\r\n\r\nexport default Loading;\r\n","import { message } from \"antd\";\n\nexport const SuccessAlert = (messages) => {\n    message.success({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n}\nexport const ErrorAlert = (messages) => {\n    message.error({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4,\n        style: { marginTop: '40px' }\n    });\n\n}\nexport const WarningAlert = (messages) => {\n    message.warning({\n        className: \"ant-message\",\n        content: messages,\n        duration: 4\n    });\n}","export const getUserTimezone = () => {\n    return Intl.DateTimeFormat().resolvedOptions().timeZone\n};","import { Avatar, Select, Button, Input, Space, Radio } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./StudentProfile.css\";\r\nimport { FaGlobe, FaGraduationCap, FaRegUser } from \"react-icons/fa\";\r\nimport DragUpload from \"../../../Components/DragUpload/DragUpload\";\r\nimport TextArea from \"antd/es/input/TextArea\";\r\nimport { MdOutlineCastForEducation } from \"react-icons/md\";\r\nimport { FaPencil } from \"react-icons/fa6\";\r\nimport { TbConfetti } from \"react-icons/tb\";\r\nimport { ErrorAlert, SuccessAlert } from \"../../../Components/Messages/messages\";\r\nimport axios from \"axios\";\r\nimport { isAuthenticated } from \"../../../Components/Auth/auth\";\r\nimport { getUserTimezone } from \"../../../Components/UserTimeZone\";\r\n\r\nconst StudentProfile = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [learningGoals, setLearningGoals] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    fullName: '',\r\n    email: '',\r\n    city: '',\r\n    phoneNumber: '',\r\n    picture: {},\r\n    proficiency: '',\r\n    headline: \"\",\r\n    description: \"\",\r\n    proficiency: \"No Proficiency\"\r\n  });\r\n\r\n  const handleChange = (key, value) => {\r\n    setFormData({\r\n      ...formData,\r\n      [key]: value\r\n    });\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      formData.learningGoals = learningGoals;\r\n      formData.timezone = getUserTimezone();\r\n      await axios.put(`${process.env.REACT_APP_BACKEND_URL}/users/update-profile`, formData, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\r\n        }\r\n      }).then(res => {\r\n        setLoading(false);\r\n        if (res.status === 200) {\r\n          SuccessAlert(res.data.successMessage);\r\n          localStorage.setItem(\"user\", JSON.stringify(res.data?.user))\r\n        } else {\r\n          ErrorAlert(res.data.errorMessage);\r\n        }\r\n      }).catch(err => {\r\n        setLoading(false);\r\n        console.log(err)\r\n        ErrorAlert(err?.message);\r\n      })\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  }\r\n\r\n  // Static array of button texts\r\n  const learningGoalsArray = [\r\n    { icon: <MdOutlineCastForEducation />, text: 'Grow your career' },\r\n    { icon: <FaGraduationCap />, text: 'Thrive at University' },\r\n    { icon: <FaPencil />, text: 'prepare for a test' },\r\n    { icon: <TbConfetti />, text: 'Just for fun' },\r\n    { icon: <FaGlobe />, text: 'Travel abroad' },\r\n    { text: 'Something else...' }\r\n  ];\r\n\r\n  const handleButtonClick = (buttonId) => {\r\n    // Check if button is already selected\r\n    const isSelected = learningGoals?.includes(buttonId);\r\n\r\n    // Toggle selection\r\n    if (isSelected) {\r\n      setLearningGoals(learningGoals.filter(id => id !== buttonId));\r\n    } else {\r\n      setLearningGoals([...learningGoals, buttonId]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      setFormData(isAuthenticated());\r\n      if (isAuthenticated()?.learningGoals) {\r\n        setLearningGoals(isAuthenticated()?.learningGoals)\r\n      }\r\n    }\r\n\r\n    return () => {\r\n\r\n    }\r\n  }, []);\r\n\r\n  console.log(getUserTimezone())\r\n\r\n\r\n  return (\r\n    <div className=\"StudentProfile\">\r\n      <form onSubmit={handleSubmit} className=\"container\">\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputName\" className=\"col-sm-2 col-form-label\">Full Name</label>\r\n          <div className=\"col-sm-10\">\r\n            <Input\r\n              required\r\n              type=\"text\"\r\n              value={formData.fullName}\r\n              onChange={(e) => handleChange('fullName', e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputEmail\" className=\"col-sm-2 col-form-label\">Email</label>\r\n          <div className=\"col-sm-10\">\r\n            <Input\r\n              type=\"text\"\r\n              required\r\n              value={formData.email}\r\n              onChange={(e) => handleChange('email', e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputCity\" className=\"col-sm-2 col-form-label\">City</label>\r\n          <div className=\"col-sm-10\">\r\n            <Input\r\n              type=\"text\"\r\n              required\r\n              id=\"inputCity\"\r\n              value={formData.city}\r\n              onChange={(e) => handleChange('city', e.target.value)}\r\n              placeholder=\"Enter Your City Here\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputMobile\" className=\"col-sm-2 col-form-label\">Mobile Number</label>\r\n          <div className=\"col-sm-10\">\r\n            <Input\r\n              type=\"text\"\r\n              required\r\n              id=\"inputMobile\"\r\n              value={formData.phoneNumber}\r\n              onChange={(e) => handleChange('phoneNumber', e.target.value)}\r\n              placeholder=\"Enter Your Number Here\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputPictupicture\" className=\"col-sm-2 col-form-label d-flex align-items-center gap-3\">\r\n            Profile Photo\r\n            <Avatar size=\"large\" icon={<FaRegUser />} />\r\n          </label>\r\n          <div className=\"col-sm-10\">\r\n            <DragUpload accept=\"image/*\" noMultiple value={[formData?.picture]} updateFiles={(val) => handleChange('picture', val[0])} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row my-4\">\r\n          <label htmlFor=\"inputSpecialities\" className=\"col-sm-2 col-form-label\">Proficiency</label>\r\n          <div className=\"col-sm-10\">\r\n            <Radio.Group onChange={(e) => handleChange('proficiency', e.target.value)} value={formData?.proficiency}>\r\n              <Space direction=\"vertical\">\r\n                <Radio value=\"No Proficiency\">No Proficiency</Radio>\r\n                <Radio value=\"Low Proficiency\">Low Proficiency</Radio>\r\n                <Radio value=\"Intermediate Proficiency\">Intermediate Proficiency</Radio>\r\n                <Radio value=\"Upper Intermediate Proficiency\">Upper Intermediate Proficiency</Radio>\r\n                <Radio value=\"High Proficiency\">High Proficiency</Radio>\r\n              </Space>\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputSpecialities\" className=\"col-sm-2 col-form-label\">Learning Goals</label>\r\n          <div className=\"col-sm-10\">\r\n            <div className=\"learningGoalsBtns\">\r\n              {learningGoalsArray.map((button, key) => (\r\n                <button\r\n                  type=\"button\"\r\n                  key={key}\r\n                  className={learningGoals?.includes(button?.text) ? 'selectedButton btn' : 'button btn'}\r\n                  onClick={() => handleButtonClick(button?.text)}\r\n                >\r\n                  <span>\r\n                    {button.icon}\r\n                  </span>\r\n                  <span>\r\n                    {button.text}\r\n                  </span>\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputHeadline\" className=\"col-sm-2 col-form-label\">Headline</label>\r\n          <div className=\"col-sm-10 mb-4\">\r\n            <TextArea showCount maxLength={200} value={formData?.headline} required onChange={(e) => handleChange('headline', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputSpecialities\" className=\"col-sm-2 col-form-label\">Description</label>\r\n          <div className=\"col-sm-10 mb-4\">\r\n            <TextArea showCount maxLength={500} value={formData?.description} required onChange={(e) => handleChange('description', e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3 mt-5\">\r\n          <div className=\"col-sm-10 offset-sm-2\">\r\n            <Button type=\"primary\" className=\"w-100 h-auto py-2\" loading={loading} htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentProfile;\r\n"],"names":["Dragger","Upload","_ref","updateFiles","value","noMultiple","accept","fileList","setFileList","useState","uploading","setUploading","props","name","multiple","action","concat","process","onChange","info","_info$fileList","status","file","updatedFileList","map","f","response","length","message","success","error","onDrop","e","console","log","dataTransfer","files","useEffect","_jsxs","children","_jsx","maxCount","className","defaultFileList","showUploadList","previewFile","UploadOutlined","index","url","DeleteFilled","onClick","updatedFiles","filter","i","handleDelete","src","alt","width","height","Loading","LoadingIcon","SuccessAlert","messages","content","duration","style","marginTop","ErrorAlert","getUserTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","StudentProfile","loading","setLoading","learningGoals","setLearningGoals","formData","setFormData","fullName","email","city","phoneNumber","picture","proficiency","headline","description","handleChange","key","learningGoalsArray","icon","MdOutlineCastForEducation","text","FaGraduationCap","FaPencil","TbConfetti","FaGlobe","_isAuthenticated","_isAuthenticated2","isAuthenticated","onSubmit","async","event","preventDefault","timezone","axios","put","headers","Authorization","localStorage","getItem","then","res","_res$data","data","successMessage","setItem","JSON","stringify","user","errorMessage","catch","err","htmlFor","Input","required","type","target","id","placeholder","Avatar","size","FaRegUser","DragUpload","val","Radio","Space","direction","button","includes","buttonId","isSelected","handleButtonClick","TextArea","showCount","maxLength","Button","htmlType"],"sourceRoot":""}